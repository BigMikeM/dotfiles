#!/bin/bash

check_software_for_setup() {

	info "Checking for apps which will need to be set up after bootstrap..."

	software_to_check=(
		sheldon
		gh
		nvm
		yay
	)

	software_to_setup=()

	for i in "${software_to_check[@]}"; do
		if ! _exists "$i"; then
			software_to_setup+=("$i")

			info "${i} was not found. Adding to setup list."
		fi

		if _exists "$i"; then
			info "Found ${i}..."
		fi
	done

	finish
}

_set_up_nvm() {

	info "Setting up Node Version Manager"
	info "This will install the latest version of NodeJS."
	read -rp "Would you also like to install the latest LTS release? [y/N]" -n 1 answer
	# vared -p "Would you like the latest LTS release? [y/N]" -c anwser
	printf "%s\n" ""

	nvm install node

	if [ "${answer,,}" == "y" ]; then
		info "You chose to install the latest NodeJS lts."
		nvm install --lts
	fi

	finish
}

_set_up_sheldon() {

	info "Setting up Sheldon."
	printf "%s\n" ""

	sheldon lock --update

	finish
}

_set_up_gh() {

	info "Setting up GitHub CLI."
	info "This will also set up SSH to connect your git repos with GitHub."
	printf "%s\n" ""
	gh auth login

	finish
}

_set_up_lvim() {

	if ! _exists nvim; then
		exit
	fi

	info "LunarVim setup is not yet complete."
	info "Skipping."
	printf "%s\n" ""
	finish

}

_set_up_yay() {
	info "Setting up Yay: Yet another Yaourt"
	printf "%s\n" ""
	yay -Y --gendb
	yay -Y --devel --combinedupgrade --batchinstall --save

	_set_up_pacman

	finish
}

_set_up_pacman() {

	info "Editing your pacman.conf will require elevated access"
	sudo -v

	sudo sed -Ei "s/(^\#\s*)(Color.*)/\2/g" "/etc/pacman.conf"
	sudo sed -Ei "s/(^\#\s*)(VerbosePackageLists.*)/\2/g" "/etc/pacman.conf"
}

_init_app() {

	local app="$1"

	if ! _exists "$app"; then
		return
	fi

	eval "_set_up_$1" ||
		warn "No setup function found for [$i]" \
			info "Skipping setup of [$i]"
	printf "%s\n" ""
	return
}

set_up_software() {

	info "Attempting to initialize new apps."

	for i in "${software_to_setup[@]}"; do
		_init_app "$i"
	done

	finish
}
