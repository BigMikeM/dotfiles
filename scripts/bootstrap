#!/usr/bin/env bash

# Dotfiles and bootstrap installer

set -eu
IFS=$'\t\n'
trap on_error SIGTERM

# Set directory
export DOTFILES="$HOME/.dotfiles"
export SCRIPTS="$DOTFILES/scripts/"

# Imports
source "${SCRIPTS}/utils"
source "${SCRIPTS}/package_list"

on_start() {
	info "     |-|                                             |-|     "
	info "     |-|         Custom dotfiles bootstrap.          |-|     "
	info "     |-|                                             |-|     "
	info "     |-|     This script will attempt to install     |-|     "
	info "     |-|      and set up a curated selection of      |-|     "
	info "     |-|        GUI and CLI apps, as well as         |-|     "
	info "     |-|         custom configuration files.         |-|     "
	info "     |-|                                             |-|     "
	info "     |-|          created by @denysdovhan            |-|     "
	info "     |-|            forked by @BigMikeM              |-|     "
	info "     |-|                                             |-|     "

	info "This script will attempt to install and set up desired software."
	printf "\n"

	read -rp "Would you like to proceed with installation? [y/N] " -n 1 answer
	echo

	if [ "${answer,,}" != "y" ]; then
		exit 1
	fi
}

install_lazygit() {
	if ! _exists go version; then
		return 1
	fi
	info "Installing lazygit using golang."
	go install github.com/jesseduffield/lazygit@latest

}

# apt_install() {
#   sudo -v
#   sudo apt install "${apt_packages[@]}"
# }

rpm_install() {
	sudo -v
	sudo dnf install --refresh -y "${rpm_packages[@]}"
}

arch_install() {
	sudo -v
	sudo pacman -Sy "${arch_packages[@]}"
}

install_software() {

	info "Installing system packages."

	"$(find_package_manager)"_install

	finish
}

main() {
	on_start
	# check_software_for_setup "$*"
	# install_yay "$*"
	install_software "$*"
	on_finish "$*"
}

main "$*"
