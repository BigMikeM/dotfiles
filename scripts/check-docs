#!/bin/bash
# -*- mode: sh -*-

# Documentation Sync Checker
# Helps ensure Copilot instructions stay in sync with repository changes

set -e

DOTFILES="${DOTFILES:-$HOME/.dotfiles}"
COPILOT_INSTRUCTIONS="$DOTFILES/.github/copilot-instructions.md"

# Colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${CYAN}=== Documentation Sync Checker ===${NC}\n"

# Check if copilot-instructions.md exists
if [[ ! -f "$COPILOT_INSTRUCTIONS" ]]; then
	echo -e "${RED}✗ Copilot instructions file not found!${NC}"
	echo "Expected: $COPILOT_INSTRUCTIONS"
	exit 1
fi

echo -e "${GREEN}✓ Copilot instructions file exists${NC}"

# Extract last updated date from copilot instructions
last_updated=$(grep "Last Updated:" "$COPILOT_INSTRUCTIONS" | sed 's/.*Last Updated:\*\* //' | sed 's/[[:space:]]*$//')

if [[ -z "$last_updated" ]]; then
	echo -e "${YELLOW}⚠ Warning: Last Updated date not found in copilot instructions${NC}"
	echo "  Please update the header with the current date"
	copilot_date="1900-01-01"
else
	echo -e "${GREEN}✓ Last Updated: $last_updated${NC}"
	# Convert "October 29, 2025" to "2025-10-29" format
	copilot_date=$(date -d "$last_updated" +"%Y-%m-%d" 2>/dev/null || echo "1900-01-01")
fi

# Check for recently modified key files
echo -e "\n${CYAN}Recent changes to key files:${NC}"

key_files=(
	"scripts/bootstrap"
	"scripts/update"
	"scripts/utils"
	"scripts/package_list"
	"lib/alias.zsh"
	"README.md"
	"TODO.md"
)

needs_update=false

for file in "${key_files[@]}"; do
	filepath="$DOTFILES/$file"
	if [[ -f "$filepath" ]]; then
		# Get last modified date
		if [[ "$(uname)" == "Darwin" ]]; then
			# macOS
			file_date=$(stat -f "%Sm" -t "%Y-%m-%d" "$filepath")
		else
			# Linux
			file_date=$(date -r "$filepath" +"%Y-%m-%d" 2>/dev/null || echo "unknown")
		fi

		if [[ "$file_date" > "$copilot_date" ]] 2>/dev/null; then
			echo -e "  ${YELLOW}⚠ $file${NC} (modified: $file_date)"
			needs_update=true
		else
			echo -e "  ${GREEN}✓ $file${NC} ($file_date)"
		fi
	fi
done

echo ""

if [[ "$needs_update" == true ]]; then
	echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
	echo -e "${YELLOW}⚠  DOCUMENTATION MAY NEED UPDATING${NC}"
	echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
	echo ""
	echo "Some key files have been modified since the last Copilot instructions update."
	echo ""
	echo "Consider updating if you've made significant changes to:"
	echo "  • Scripts or utilities (add/remove/modify)"
	echo "  • Core functionality in bootstrap/update"
	echo "  • Package lists or installation strategies"
	echo "  • Configuration files or tools"
	echo "  • Coding standards or best practices"
	echo ""
	echo "Files to update:"
	echo "  1. .github/copilot-instructions.md (update content + date)"
	echo "  2. README.md (if user-facing features changed)"
	echo "  3. TODO.md (mark completed or add new items)"
	echo ""
else
	echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
	echo -e "${GREEN}✓ Documentation appears up to date!${NC}"
	echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
fi

echo ""
